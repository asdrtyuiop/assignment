{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\test03\\\\client\\\\src\\\\components\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport * as actions from '../actions';\nimport CustomInput from './Custominput';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async onSubmit(formData) {\n    console.log('onSubmit() got called');\n    console.log('formData', formData);\n    await this.props.signUp(formData);\n\n    if (!this.props.errorMessage) {\n      this.props.history.push('.');\n    }\n  }\n\n  render() {\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"email\",\n      type: \"text\",\n      id: \"email\",\n      label: \"Enter your email\",\n      placeholder: \"example@example.com\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      id: \"password\",\n      label: \"enter password\",\n      placeholder: \"\",\n      component: CustomInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), this.props.errorMessage ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.errorMessage) : null, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign Up\"))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'signup'\n}))(SignUp);","map":{"version":3,"sources":["D:\\API\\test03\\client\\src\\components\\SignUp.js"],"names":["React","Component","reduxForm","Field","connect","compose","actions","CustomInput","SignUp","constructor","props","onSubmit","bind","formData","console","log","signUp","errorMessage","history","push","render","handleSubmit","mapStateToProps","state","auth","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport * as actions from '../actions'\r\nimport CustomInput from './Custominput';\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    async onSubmit(formData){\r\n        console.log('onSubmit() got called');\r\n        console.log('formData', formData);\r\n        await this.props.signUp(formData);\r\n        if(!this.props.errorMessage){\r\n            this.props.history.push('.')\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"col\"></div>\r\n                <div className=\"col\">\r\n                    <form onSubmit={handleSubmit(this.onSubmit)}>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                label=\"Enter your email\"\r\n                                placeholder=\"example@example.com\"\r\n                                component={ CustomInput } />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <Field\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                label=\"enter password\"\r\n                                placeholder=\"\"\r\n                                component={ CustomInput } />\r\n                        </fieldset>\r\n\r\n                        { this.props.errorMessage ? \r\n                        <div className=\"alert alert-danger\">\r\n                            { this.props.errorMessage }\r\n                        </div> : null }\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col\"></div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        errorMessage: state.auth.errorMessage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, actions),\r\n    reduxForm({ form: 'signup' })\r\n)(SignUp) "]},"metadata":{},"sourceType":"module"}