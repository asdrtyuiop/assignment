{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\test03 - Copy (2)\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/Dashboard';\nimport Products from './components/ProductList';\nimport reducers from './reducers';\nimport authGuard from './components/HOCs/authGuard';\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\naxios.defaults.headers.common['Authorization'] = jwtToken;\nReactDOM.render(React.createElement(Provider, {\n  store: createStore(reducers, {\n    auth: {\n      token: jwtToken,\n      isAuthenticated: jwtToken ? true : false\n    }\n  }, applyMiddleware(reduxThunk)),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: Home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/signup\",\n  component: SignUp,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/signin\",\n  component: SignIn,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/dashboard\",\n  component: authGuard(Dashboard),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/products\",\n  component: authGuard(Products),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})))), document.querySelector('#root'));\nserviceWorker.register();","map":{"version":3,"sources":["D:\\API\\test03 - Copy (2)\\client\\src\\index.js"],"names":["React","ReactDOM","BrowserRouter","Switch","Route","Link","createStore","applyMiddleware","Provider","reduxThunk","axios","serviceWorker","App","Home","SignUp","SignIn","Dashboard","Products","reducers","authGuard","jwtToken","localStorage","getItem","defaults","headers","common","render","auth","token","isAuthenticated","document","querySelector","register"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,kBAAnD;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAjB;AACAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDL,QAAjD;AAEAnB,QAAQ,CAACyB,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEpB,WAAW,CAACY,QAAD,EAAW;AACnCS,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAER,QADL;AAEFS,MAAAA,eAAe,EAAET,QAAQ,GAAG,IAAH,GAAU;AAFjC;AAD6B,GAAX,EAKzBb,eAAe,CAACE,UAAD,CALU,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEI,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,YAAlB;AAA+B,EAAA,SAAS,EAAEI,SAAS,CAACH,SAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,WAAlB;AAA8B,EAAA,SAAS,EAAEG,SAAS,CAACF,QAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADJ,CANJ,CADJ,EAiBIa,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAjBJ;AAkBApB,aAAa,CAACqB,QAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk'\nimport axios from 'axios';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Home from './components/Home';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Dashboard from './components/Dashboard';\nimport Products from './components/ProductList';\nimport reducers from './reducers';\n\n\nimport authGuard from './components/HOCs/authGuard'\n\nconst jwtToken = localStorage.getItem('JWT_TOKEN');\naxios.defaults.headers.common['Authorization'] = jwtToken;\n\nReactDOM.render(\n    <Provider store={createStore(reducers, {\n        auth: {\n            token: jwtToken,\n            isAuthenticated: jwtToken ? true : false\n        }\n    }, applyMiddleware(reduxThunk))}>\n        <BrowserRouter>\n            <App>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/signup\" component={SignUp} />\n                <Route exact path=\"/signin\" component={SignIn} />\n                <Route exact path=\"/dashboard\" component={authGuard(Dashboard)} />\n                <Route exact path=\"/products\" component={authGuard(Products)} />\n            </App>\n        </BrowserRouter>\n    </Provider>, \n    document.querySelector('#root'));\nserviceWorker.register();\n"]},"metadata":{},"sourceType":"module"}