{"ast":null,"code":"import axios from 'axios';\nimport { AUTH_SIGN_UP, AUTH_ERROR, AUTH_SIGN_OUT, AUTH_SIGN_IN } from './types';\nexport const signUp = data => {\n  return async dispatch => {\n    try {\n      console.log('ActionCreator SIGNUP CALLED');\n      const res = await axios.post('http://localhost:5000/users/signup', data); //console.log('res',res)\n\n      console.log('ActionCreator SIGNUP dispatched an action');\n      dispatch({\n        type: AUTH_SIGN_UP,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email used'\n      });\n      console.log('err', err);\n    }\n  };\n};\nexport const signOut = () => {\n  return dispatch => {\n    localStorage.removeItem('JWT_TOKEN');\n    dispatch({\n      type: AUTH_SIGN_OUT,\n      payload: ''\n    });\n  };\n};\nexport const signIn = data => {\n  return async dispatch => {\n    try {\n      console.log('ActionCreator SIGNUP CALLED');\n      const res = await axios.post('http://localhost:5000/users/signin', data); //console.log('res',res)\n\n      console.log('ActionCreator SIGNIN dispatched an action');\n      dispatch({\n        type: AUTH_SIGN_IN,\n        payload: res.data.token\n      });\n      localStorage.setItem('JWT_TOKEN', res.data.token);\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: 'Email and password error'\n      });\n      console.log('err', err);\n    }\n  };\n};\nexport const getSecret = () => {\n  return async dispatch => {\n    try {\n      console.log('trying get BE data');\n      const res = await axios.get('http://localhost:5000/users/secret');\n      console.log('res', res);\n      dispatch({\n        type: DASHBOAR_GET_DATA\n      });\n    } catch (err) {\n      console.error('err', err);\n    }\n  };\n};","map":{"version":3,"sources":["D:\\API\\test03\\client\\src\\actions\\index.js"],"names":["axios","AUTH_SIGN_UP","AUTH_ERROR","AUTH_SIGN_OUT","AUTH_SIGN_IN","signUp","data","dispatch","console","log","res","post","type","payload","token","localStorage","setItem","err","signOut","removeItem","signIn","getSecret","get","DASHBOAR_GET_DATA","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,EAAkDC,YAAlD,QAAsE,SAAtE;AAEA,OAAO,MAAMC,MAAM,GAAGC,IAAI,IAAI;AAC1B,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,oCAAX,EAAiDL,IAAjD,CAAlB,CAFA,CAGA;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAF,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,YADD;AAELY,QAAAA,OAAO,EAAEH,GAAG,CAACJ,IAAJ,CAASQ;AAFb,OAAD,CAAR;AAKAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,GAAG,CAACJ,IAAJ,CAASQ,KAA3C;AACH,KAXD,CAWC,OAAMG,GAAN,EAAU;AACPV,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEV,UADD;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBQ,GAAnB;AACH;AACJ,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAOX,QAAQ,IAAI;AACfQ,IAAAA,YAAY,CAACI,UAAb,CAAwB,WAAxB;AACAZ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMO,MAAM,GAAGd,IAAI,IAAI;AAC1B,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,oCAAX,EAAiDL,IAAjD,CAAlB,CAFA,CAGA;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACAF,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAER,YADD;AAELS,QAAAA,OAAO,EAAEH,GAAG,CAACJ,IAAJ,CAASQ;AAFb,OAAD,CAAR;AAKAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,GAAG,CAACJ,IAAJ,CAASQ,KAA3C;AACH,KAXD,CAWC,OAAMG,GAAN,EAAU;AACPV,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEV,UADD;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIAL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBQ,GAAnB;AACH;AACJ,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAO,MAAMd,QAAN,IAAkB;AACrB,QAAG;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,YAAMC,GAAG,GAAG,MAAMV,KAAK,CAACsB,GAAN,CAAU,oCAAV,CAAlB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBC,GAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEW;AADD,OAAD,CAAR;AAIH,KATD,CASE,OAAMN,GAAN,EAAU;AACRT,MAAAA,OAAO,CAACgB,KAAR,CAAc,KAAd,EAAqBP,GAArB;AACH;AACJ,GAbD;AAcH,CAfM","sourcesContent":["import axios from 'axios'\r\nimport { AUTH_SIGN_UP, AUTH_ERROR, AUTH_SIGN_OUT, AUTH_SIGN_IN } from './types'\r\n\r\nexport const signUp = data => {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log('ActionCreator SIGNUP CALLED');\r\n            const res = await axios.post('http://localhost:5000/users/signup', data)\r\n            //console.log('res',res)\r\n            console.log('ActionCreator SIGNUP dispatched an action')\r\n            dispatch({\r\n                type: AUTH_SIGN_UP,\r\n                payload: res.data.token\r\n            });\r\n\r\n            localStorage.setItem('JWT_TOKEN', res.data.token);\r\n        }catch(err){\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Email used'\r\n            })\r\n            console.log('err', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return dispatch => {\r\n        localStorage.removeItem('JWT_TOKEN');\r\n        dispatch({\r\n            type: AUTH_SIGN_OUT,\r\n            payload: ''\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signIn = data => {\r\n    return async (dispatch) => {\r\n        try {\r\n            console.log('ActionCreator SIGNUP CALLED');\r\n            const res = await axios.post('http://localhost:5000/users/signin', data)\r\n            //console.log('res',res)\r\n            console.log('ActionCreator SIGNIN dispatched an action')\r\n            dispatch({\r\n                type: AUTH_SIGN_IN,\r\n                payload: res.data.token\r\n            });\r\n\r\n            localStorage.setItem('JWT_TOKEN', res.data.token);\r\n        }catch(err){\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n                payload: 'Email and password error'\r\n            })\r\n            console.log('err', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getSecret = () => {\r\n    return async dispatch => {\r\n        try{\r\n            console.log('trying get BE data')\r\n            const res = await axios.get('http://localhost:5000/users/secret')\r\n            console.log('res',res)\r\n\r\n            dispatch({\r\n                type: DASHBOAR_GET_DATA,\r\n\r\n            })\r\n        } catch(err){\r\n            console.error('err', err)\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}